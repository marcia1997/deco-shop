{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/deco-shop/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/deco-shop/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/deco-shop/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";import{makeRequest}from\"../makeRequest\";// Importing a custom function for making requests\n// Define the custom hook 'useFetch' that takes a 'url' as an argument\nvar useFetch=function useFetch(url){// Initialize state variables using the 'useState' hook\nvar _useState=useState(null),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];// Stores fetched data\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];// Tracks loading state\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];// Tracks error state\n// Use the 'useEffect' hook to perform data fetching when 'url' changes\nuseEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);// Set loading state to true\n_context.next=4;return makeRequest.get(url);case 4:res=_context.sent;// Make a GET request using 'makeRequest.get' method\nsetData(res.data.data);// Set the fetched data into the 'data' state\n_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);setError(true);// Set error state to true if there's an error\ncase 11:setLoading(false);// Set loading state back to false\ncase 12:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return function fetchData(){return _ref.apply(this,arguments);};}();fetchData();// Call the fetchData function to initiate data fetching\n},[url]);// Depend on 'url' so that the effect runs when 'url' changes\n// Return an object containing the fetched 'data', loading state, and error state\nreturn{data:data,loading:loading,error:error};};export default useFetch;// Export the custom hook","map":{"version":3,"names":["useEffect","useState","makeRequest","useFetch","url","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","wrap","_callee$","_context","prev","next","get","sent","t0","stop","apply","arguments"],"sources":["C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/deco-shop/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { makeRequest } from \"../makeRequest\"; // Importing a custom function for making requests\r\n\r\n// Define the custom hook 'useFetch' that takes a 'url' as an argument\r\nconst useFetch = (url) => {\r\n  // Initialize state variables using the 'useState' hook\r\n  const [data, setData] = useState(null); // Stores fetched data\r\n  const [loading, setLoading] = useState(false); // Tracks loading state\r\n  const [error, setError] = useState(false); // Tracks error state\r\n\r\n  // Use the 'useEffect' hook to perform data fetching when 'url' changes\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true); // Set loading state to true\r\n        const res = await makeRequest.get(url); // Make a GET request using 'makeRequest.get' method\r\n        setData(res.data.data); // Set the fetched data into the 'data' state\r\n      } catch (err) {\r\n        setError(true); // Set error state to true if there's an error\r\n      }\r\n      setLoading(false); // Set loading state back to false\r\n    };\r\n    fetchData(); // Call the fetchData function to initiate data fetching\r\n  }, [url]); // Depend on 'url' so that the effect runs when 'url' changes\r\n\r\n  // Return an object containing the fetched 'data', loading state, and error state\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useFetch; // Export the custom hook\r\n"],"mappings":"2gBAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,gBAAgB,CAAE;AAE9C;AACA,GAAM,CAAAC,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,GAAG,CAAK,CACxB;AACA,IAAAC,SAAA,CAAwBJ,QAAQ,CAAC,IAAI,CAAC,CAAAK,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAAoB;AACxC,IAAAI,UAAA,CAA8BT,QAAQ,CAAC,KAAK,CAAC,CAAAU,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAtCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAAqB;AAC/C,IAAAG,UAAA,CAA0Bb,QAAQ,CAAC,KAAK,CAAC,CAAAc,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAlCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAAqB;AAE3C;AACAf,SAAS,CAAC,UAAM,CACd,GAAM,CAAAkB,SAAS,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAA,MAAAC,GAAA,QAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAEdf,UAAU,CAAC,IAAI,CAAC,CAAE;AAAAc,QAAA,CAAAE,IAAA,SACA,CAAA3B,WAAW,CAAC4B,GAAG,CAAC1B,GAAG,CAAC,QAAhCoB,GAAG,CAAAG,QAAA,CAAAI,IAAA,CAA+B;AACxCtB,OAAO,CAACe,GAAG,CAAChB,IAAI,CAACA,IAAI,CAAC,CAAE;AAAAmB,QAAA,CAAAE,IAAA,iBAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAK,EAAA,CAAAL,QAAA,aAExBV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAAA,QAElBJ,UAAU,CAAC,KAAK,CAAC,CAAE;AAAA,yBAAAc,QAAA,CAAAM,IAAA,MAAAV,OAAA,gBACpB,kBATK,CAAAL,SAASA,CAAA,SAAAC,IAAA,CAAAe,KAAA,MAAAC,SAAA,OASd,CACDjB,SAAS,CAAC,CAAC,CAAE;AACf,CAAC,CAAE,CAACd,GAAG,CAAC,CAAC,CAAE;AAEX;AACA,MAAO,CAAEI,IAAI,CAAJA,IAAI,CAAEI,OAAO,CAAPA,OAAO,CAAEI,KAAK,CAALA,KAAM,CAAC,CACjC,CAAC,CAED,cAAe,CAAAb,QAAQ,CAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}