{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { makeRequest } from \"../makeRequest\"; // Importing a custom function for making requests\n\n// Define the custom hook 'useFetch' that takes a 'url' as an argument\nconst useFetch = url => {\n  _s();\n  // Initialize state variables using the 'useState' hook\n\n  const [data, setData] = useState(null); // Stores fetched data\n  const [loading, setLoading] = useState(false); // Tracks loading state\n  const [error, setError] = useState(false); // Tracks error state\n\n  // Use the 'useEffect' hook to perform data fetching when 'url' changes\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true); // Set loading state to true\n        const res = await makeRequest.get(url); // Make a GET request using 'makeRequest.get' method\n        setData(res.data.data); // Set the fetched data into the 'data' state\n      } catch (err) {\n        setError(true); // Set error state to true if there's an error\n      }\n\n      setLoading(false); // Set loading state back to false\n    };\n\n    fetchData(); // Call the fetchData function to initiate data fetching\n  }, [url]); // Depend on 'url' so that the effect runs when 'url' changes\n\n  // Return an object containing the fetched 'data', loading state, and error state\n  return {\n    data,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"bUDdnDopLs7sI4ubr9BcUYSaQYs=\");\nexport default useFetch; // Export the custom hook","map":{"version":3,"names":["useEffect","useState","makeRequest","useFetch","url","_s","data","setData","loading","setLoading","error","setError","fetchData","res","get","err"],"sources":["C:/Users/Marcia/OneDrive/Escritorio/Web-dev/Working/Ecommerce-2023/deco-shop/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { makeRequest } from \"../makeRequest\"; // Importing a custom function for making requests\r\n\r\n// Define the custom hook 'useFetch' that takes a 'url' as an argument\r\nconst useFetch = (url) => {\r\n  // Initialize state variables using the 'useState' hook\r\n\r\n  \r\n  const [data, setData] = useState(null); // Stores fetched data\r\n  const [loading, setLoading] = useState(false); // Tracks loading state\r\n  const [error, setError] = useState(false); // Tracks error state\r\n\r\n  // Use the 'useEffect' hook to perform data fetching when 'url' changes\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true); // Set loading state to true\r\n        const res = await makeRequest.get(url); // Make a GET request using 'makeRequest.get' method\r\n        setData(res.data.data); // Set the fetched data into the 'data' state\r\n      } catch (err) {\r\n        setError(true); // Set error state to true if there's an error\r\n      }\r\n      setLoading(false); // Set loading state back to false\r\n    };\r\n    fetchData(); // Call the fetchData function to initiate data fetching\r\n  }, [url]); // Depend on 'url' so that the effect runs when 'url' changes\r\n\r\n  // Return an object containing the fetched 'data', loading state, and error state\r\n  return { data, loading, error };\r\n};\r\n\r\nexport default useFetch; // Export the custom hook\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,gBAAgB,CAAC,CAAC;;AAE9C;AACA,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB;;EAGA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;QAClB,MAAMI,GAAG,GAAG,MAAMX,WAAW,CAACY,GAAG,CAACV,GAAG,CAAC,CAAC,CAAC;QACxCG,OAAO,CAACM,GAAG,CAACP,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB;;MACAF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC;;IACDG,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEX;EACA,OAAO;IAAEE,IAAI;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACjC,CAAC;AAACL,EAAA,CAzBIF,QAAQ;AA2Bd,eAAeA,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}